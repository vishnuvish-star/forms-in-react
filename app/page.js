"use client";

import Head from "next/head";
import Image from "next/image";
import formImage from "../public/form img.png";
import { createContext } from "react";
import * as Yup from "yup";
import { useFormik } from "formik";

export default function Home() {
  const Context = createContext();
  console.log(Context);
  // Formik is a small library that helps you with the 3 most annoying parts:
  // Getting values in and out of form state
  // Validation and error messages
  // Handling form submission

  // formik logics
  const formik = useFormik({
    initialValues: {
      name: "",
      email: "",
      country: "india",
      terms: "",
    },
    // validateschema
    validationSchema: Yup.object({
      name: Yup.string()
        .max(15, "Name must be 15 charecters")
        .required("Name is required"),
      email: Yup.string().email("Invalid Email"),
      terms: Yup.array().required("Terms and service is must be checked"),
    }),
    // submit form
    onSubmit: (values) => {
      console.log(values);
    },
  });

  console.log(formik.values);
  return (
    <div className="bg-red">
      <Head>
        <title>Create next.js</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-auto flex items-center justify-center">
        <form
          onSubmit={formik.handleSubmit}
          className="bg-white flex rounded-lg w-1/2 "
        >
          <div className="flex-1 text-gray-700 p-20    ">
            <h1 className="text-3xl pb-2">Let's get started !!</h1>
            <p className="text-lg text-gray-500">
              join our E-learning platform today unlock a crash course and
              digital assets
            </p>
            <div className="pd-4">
              {/* input field for name */}
              <div>
                <label
                  htmlFor="name"
                  className={`pb-2 block text-sm ${
                    formik.touched.name && formik.errors.name
                      ? "text-red-400"
                      : ""
                  }`}
                >
                  {formik.touched.name && formik.errors.name
                    ? formik.errors.name
                    : "Name"}
                </label>
                <input
                  className="border-2 border-gray-500 p-2 rounded-md w-1/2 focus:border-teal-500 focus:ring-teal-500"
                  type="name"
                  name="name"
                  placeholder="Enter Your Name"
                  value={formik.values.name}
                  onChange={formik.handleChange}
                  onBlur={formik.handleBlur}
                />
              </div>
              {/* email field for email */}
              <div>
                <label className="pb-2 block text-sm" htmlFor="name">
                  Email
                </label>
                <input
                  className="border-2 border-gray-500 p-2 rounded-md w-1/2 focus:border-teal-500 focus:ring-teal-500"
                  type="email"
                  name="email"
                  placeholder="Enter Your Email"
                  value={formik.values.email}
                  onChange={formik.handleChange}
                />
              </div>
              {/* country field for nation*/}
              <div>
                <label className="pb-2 block text-sm" htmlFor="name">
                  Country
                </label>
                <select
                  className="border-2 border-gray-500 p-2 rounded-md w-1/2 focus:border-teal-500 "
                  name="country"
                  value={formik.values.country}
                  onChange={formik.handleChange}
                >
                  <option>India</option>
                  <option>USA</option>
                  <option>UK</option>
                  <option>AUS</option>
                </select>
              </div>
              {/* terms and conditions in checkbox*/}
              <div>
                <label className="pb-2 block text-sm" htmlFor="terms">
                  Terms
                </label>
                <div className="flex items-center gap-2">
                  <input
                    type="checkbox"
                    name="terms"
                    value="checked"
                    className="h-5 w-5 text-teal-500 border-2  focus:border-teal-500 focus:ring-teal-500"
                    onChange={formik.handleChange}
                  />
                  <p className="text-sm text-gray-500">
                    I agree to the Terms and Service that my data will be taken
                    and sold
                  </p>
                </div>
              </div>
              <button
                type="submit"
                className="bg-teal-500 text-sm text-white py-3 mt-6 rounded-lg w-full"
              >
                Start learning
              </button>
            </div>
          </div>
          <div className="relative flex-1">
            <Image
              alt="form-image"
              src={formImage}
              fill
              className="object-cover rounded-lg"
            />
          </div>
        </form>
      </main>
    </div>
  );
}
